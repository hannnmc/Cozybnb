{"version":3,"sources":["../src/reach-polymorphic.ts"],"sourcesContent":["// adapted from https://github.com/radix-ui/primitives/blob/2f139a832ba0cdfd445c937ebf63c2e79e0ef7ed/packages/react/polymorphic/src/polymorphic.ts\n// Would have liked to use it directly instead of copying but they are\n// (rightfully) treating it as an internal utility, so copy/paste it is to\n// prevent any needless churn if they make breaking changes. Big thanks to Jenna\n// for the heavy lifting! https://github.com/jjenzz\n\nimport type * as React from \"react\";\n\ndeclare const __DEV__: boolean;\n\ntype Merge<P1 = {}, P2 = {}> = Omit<P1, keyof P2> & P2;\n\n/**\n * Infers the OwnProps if E is a ForwardRefExoticComponentWithAs\n */\ntype OwnProps<E> = E extends ForwardRefComponent<any, infer P> ? P : {};\n\n/**\n * Infers the JSX.IntrinsicElement if E is a ForwardRefExoticComponentWithAs\n */\ntype IntrinsicElement<E> = E extends ForwardRefComponent<infer I, any>\n\t? I\n\t: never;\n\ntype ForwardRefExoticComponent<E, OwnProps> = React.ForwardRefExoticComponent<\n\tMerge<\n\t\tE extends React.ElementType ? React.ComponentPropsWithRef<E> : never,\n\t\tOwnProps & { as?: E }\n\t>\n>;\n\ninterface ForwardRefComponent<\n\tIntrinsicElementString,\n\tOwnProps = {}\n\t/*\n\t * Extends original type to ensure built in React types play nice with\n\t * polymorphic components still e.g. `React.ElementRef` etc.\n\t */\n> extends ForwardRefExoticComponent<IntrinsicElementString, OwnProps> {\n\t/*\n\t * When `as` prop is passed, use this overload. Merges original own props\n\t * (without DOM props) and the inferred props from `as` element with the own\n\t * props taking precendence.\n\t *\n\t * We explicitly avoid `React.ElementType` and manually narrow the prop types\n\t * so that events are typed when using JSX.IntrinsicElements.\n\t */\n\t<As = IntrinsicElementString>(\n\t\tprops: As extends \"\"\n\t\t\t? { as: keyof JSX.IntrinsicElements }\n\t\t\t: As extends React.ComponentType<infer P>\n\t\t\t? Merge<P, OwnProps & { as: As }>\n\t\t\t: As extends keyof JSX.IntrinsicElements\n\t\t\t? Merge<JSX.IntrinsicElements[As], OwnProps & { as: As }>\n\t\t\t: never\n\t): React.ReactElement | null;\n}\n\ninterface MemoComponent<IntrinsicElementString, OwnProps = {}>\n\textends React.MemoExoticComponent<\n\t\tForwardRefComponent<IntrinsicElementString, OwnProps>\n\t> {\n\t<As = IntrinsicElementString>(\n\t\tprops: As extends \"\"\n\t\t\t? { as: keyof JSX.IntrinsicElements }\n\t\t\t: As extends React.ComponentType<infer P>\n\t\t\t? Merge<P, OwnProps & { as: As }>\n\t\t\t: As extends keyof JSX.IntrinsicElements\n\t\t\t? Merge<JSX.IntrinsicElements[As], OwnProps & { as: As }>\n\t\t\t: never\n\t): React.ReactElement | null;\n}\n\n/** @internal */\nexport default () => {\n\tif (__DEV__) {\n\t\tthrow new Error(\n\t\t\t\"@reach/polymorphic is a package for internal utility types and should not be used directly.\"\n\t\t);\n\t}\n};\n\nexport type {\n\tForwardRefComponent,\n\tIntrinsicElement,\n\tMemoComponent,\n\tMerge,\n\tOwnProps,\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AA0EA,IAAO,4BAAQ,MAAM;AACpB,MAAI,MAAS;AACZ,UAAM,IAAI,MACT,6FACD;AAAA,EACD;AACD;","names":[]}