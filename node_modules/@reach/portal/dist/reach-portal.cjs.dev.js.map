{"version":3,"sources":["../src/reach-portal.tsx"],"sourcesContent":["/**\n * Welcome to @reach/portal!\n *\n * Creates and appends a DOM node to the end of `document.body` and renders a\n * React tree into it. Useful for rendering a natural React element hierarchy\n * with a different DOM hierarchy to prevent parent styles from clipping or\n * hiding content (for popovers, dropdowns, and modals).\n *\n * @see Docs   https://reach.tech/portal\n * @see Source https://github.com/reach/reach-ui/tree/main/packages/portal\n * @see React  https://reactjs.org/docs/portals.html\n */\n\nimport * as React from \"react\";\nimport {\n\tuseForceUpdate,\n\tuseIsomorphicLayoutEffect as useLayoutEffect,\n} from \"@reach/utils\";\nimport { createPortal } from \"react-dom\";\n\ndeclare const __DEV__: boolean;\n\n/**\n * Portal\n *\n * @see Docs https://reach.tech/portal#portal\n */\nconst PortalImpl: React.FC<PortalProps> = ({\n\tchildren,\n\ttype = \"reach-portal\",\n\tcontainerRef,\n}) => {\n\tlet mountNode = React.useRef<HTMLDivElement | null>(null);\n\tlet portalNode = React.useRef<HTMLElement | null>(null);\n\tlet forceUpdate = useForceUpdate();\n\n\tif (__DEV__) {\n\t\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\t\tReact.useEffect(() => {\n\t\t\tif (containerRef != null) {\n\t\t\t\tif (typeof containerRef !== \"object\" || !(\"current\" in containerRef)) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\"@reach/portal: Invalid value passed to the `containerRef` of a \" +\n\t\t\t\t\t\t\t\"`Portal`. The portal will be appended to the document body, but if \" +\n\t\t\t\t\t\t\t\"you want to attach it to another DOM node you must pass a valid \" +\n\t\t\t\t\t\t\t\"React ref object to `containerRef`.\"\n\t\t\t\t\t);\n\t\t\t\t} else if (containerRef.current == null) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\"@reach/portal: A ref was passed to the `containerRef` prop of a \" +\n\t\t\t\t\t\t\t\"`Portal`, but no DOM node was attached to it. Be sure to pass the \" +\n\t\t\t\t\t\t\t\"ref to a DOM component.\\n\\nIf you are forwarding the ref from \" +\n\t\t\t\t\t\t\t\"another component, be sure to use the React.forwardRef API. \" +\n\t\t\t\t\t\t\t\"See https://reactjs.org/docs/forwarding-refs.html.\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}, [containerRef]);\n\t}\n\n\tuseLayoutEffect(() => {\n\t\t// This ref may be null when a hot-loader replaces components on the page\n\t\tif (!mountNode.current) return;\n\t\t// It's possible that the content of the portal has, itself, been portaled.\n\t\t// In that case, it's important to append to the correct document element.\n\t\tlet ownerDocument = mountNode.current!.ownerDocument;\n\t\tlet body = containerRef?.current || ownerDocument.body;\n\t\tportalNode.current = ownerDocument?.createElement(type)!;\n\t\tbody.appendChild(portalNode.current);\n\t\tforceUpdate();\n\t\treturn () => {\n\t\t\tif (portalNode.current && body) {\n\t\t\t\tbody.removeChild(portalNode.current);\n\t\t\t}\n\t\t};\n\t}, [type, forceUpdate, containerRef]);\n\n\treturn portalNode.current ? (\n\t\tcreatePortal(children, portalNode.current)\n\t) : (\n\t\t<span ref={mountNode} />\n\t);\n};\n\nconst Portal: React.FC<PortalProps> = ({\n\tunstable_skipInitialRender,\n\t...props\n}) => {\n\tlet [hydrated, setHydrated] = React.useState(false);\n\tReact.useEffect(() => {\n\t\tif (unstable_skipInitialRender) {\n\t\t\tsetHydrated(true);\n\t\t}\n\t}, [unstable_skipInitialRender]);\n\tif (unstable_skipInitialRender && !hydrated) {\n\t\treturn null;\n\t}\n\treturn <PortalImpl {...props} />;\n};\n\n/**\n * @see Docs https://reach.tech/portal#portal-props\n */\ntype PortalProps = {\n\t/**\n\t * Regular React children.\n\t *\n\t * @see Docs https://reach.tech/portal#portal-children\n\t */\n\tchildren: React.ReactNode;\n\t/**\n\t * The DOM element type to render.\n\t *\n\t * @see Docs https://reach.tech/portal#portal-type\n\t */\n\ttype?: string;\n\t/**\n\t * The container ref to which the portal will be appended. If not set the\n\t * portal will be appended to the body of the component's owner document\n\t * (typically this is the `document.body`).\n\t *\n\t * @see Docs https://reach.tech/portal#portal-containerRef\n\t */\n\tcontainerRef?: React.RefObject<Node>;\n\tunstable_skipInitialRender?: boolean;\n};\n\nPortal.displayName = \"Portal\";\n\n////////////////////////////////////////////////////////////////////////////////\n// Exports\n\nexport type { PortalProps };\nexport { Portal };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA,YAAuB;AACvB,mBAGO;AACP,uBAA6B;AAS7B,IAAM,aAAoC,CAAC;AAAA,EAC1C;AAAA,EACA,OAAO;AAAA,EACP;AAAA,MACK;AACL,MAAI,YAAY,AAAM,aAA8B,IAAI;AACxD,MAAI,aAAa,AAAM,aAA2B,IAAI;AACtD,MAAI,cAAc,iCAAe;AAEjC,MAAI,MAAS;AAEZ,IAAM,gBAAU,MAAM;AACrB,UAAI,gBAAgB,MAAM;AACzB,YAAI,OAAO,iBAAiB,YAAY,CAAE,cAAa,eAAe;AACrE,kBAAQ,KACP,uOAID;AAAA,QACD,WAAW,aAAa,WAAW,MAAM;AACxC,kBAAQ,KACP,gTAKD;AAAA,QACD;AAAA,MACD;AAAA,IACD,GAAG,CAAC,YAAY,CAAC;AAAA,EAClB;AAEA,8CAAgB,MAAM;AAErB,QAAI,CAAC,UAAU;AAAS;AAGxB,QAAI,gBAAgB,UAAU,QAAS;AACvC,QAAI,OAAO,8CAAc,YAAW,cAAc;AAClD,eAAW,UAAU,+CAAe,cAAc;AAClD,SAAK,YAAY,WAAW,OAAO;AACnC,gBAAY;AACZ,WAAO,MAAM;AACZ,UAAI,WAAW,WAAW,MAAM;AAC/B,aAAK,YAAY,WAAW,OAAO;AAAA,MACpC;AAAA,IACD;AAAA,EACD,GAAG,CAAC,MAAM,aAAa,YAAY,CAAC;AAEpC,SAAO,WAAW,UACjB,mCAAa,UAAU,WAAW,OAAO,IAEzC,oCAAC;AAAA,IAAK,KAAK;AAAA,GAAW;AAExB;AAEA,IAAM,SAAgC,CAAC,OAGjC;AAHiC,eACtC;AAAA;AAAA,MADsC,IAEnC,kBAFmC,IAEnC;AAAA,IADH;AAAA;AAGA,MAAI,CAAC,UAAU,eAAe,AAAM,eAAS,KAAK;AAClD,EAAM,gBAAU,MAAM;AACrB,QAAI,4BAA4B;AAC/B,kBAAY,IAAI;AAAA,IACjB;AAAA,EACD,GAAG,CAAC,0BAA0B,CAAC;AAC/B,MAAI,8BAA8B,CAAC,UAAU;AAC5C,WAAO;AAAA,EACR;AACA,SAAO,oCAAC,+BAAe,MAAO;AAC/B;AA6BA,OAAO,cAAc;","names":[]}