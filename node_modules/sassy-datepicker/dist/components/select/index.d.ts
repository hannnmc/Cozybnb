import { HTMLProps, PropsWithChildren } from 'react';
import './styles.css';
export declare type OptionType<T> = {
    value: T;
    label: string;
    disabled: boolean;
};
declare type CustomSelectProps<T> = {
    /**
     * The value of the select.
     */
    value: T;
    /**
     * A callback triggered whenever the value of the select changes.
     */
    onChange: (value: T) => void;
    /**
     * The options to display in the select.
     *
     * Format - [{value: [value, label], disabled: boolean}, ...]
     */
    options: OptionType<T>[];
    /**
     * If this input element is disabled
     */
    disabled?: boolean;
    /**
     * How to format the display value
     */
    formatValue?: (value: T) => string;
} & Omit<PropsWithChildren<HTMLProps<HTMLDivElement>>, 'onChange' | 'value' | 'disabled'>;
/**
 * A custom select component.
 *
 */
declare function CustomSelect<T>({ value, options, onChange, className, disabled, formatValue, }: CustomSelectProps<T>): JSX.Element;
export default CustomSelect;
